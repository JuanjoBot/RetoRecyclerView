// Generated by view binder compiler. Do not edit!
package com.example.recyclerview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recyclerview.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVideoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivVideoThumbnail;

  @NonNull
  public final TextView tvChannelName;

  @NonNull
  public final TextView tvComment;

  @NonNull
  public final TextView tvLikes;

  @NonNull
  public final TextView tvShare;

  @NonNull
  public final TextView tvVideoDatePosted;

  @NonNull
  public final TextView tvVideoViews;

  private ItemVideoBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivVideoThumbnail,
      @NonNull TextView tvChannelName, @NonNull TextView tvComment, @NonNull TextView tvLikes,
      @NonNull TextView tvShare, @NonNull TextView tvVideoDatePosted,
      @NonNull TextView tvVideoViews) {
    this.rootView = rootView;
    this.ivVideoThumbnail = ivVideoThumbnail;
    this.tvChannelName = tvChannelName;
    this.tvComment = tvComment;
    this.tvLikes = tvLikes;
    this.tvShare = tvShare;
    this.tvVideoDatePosted = tvVideoDatePosted;
    this.tvVideoViews = tvVideoViews;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivVideoThumbnail;
      ImageView ivVideoThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (ivVideoThumbnail == null) {
        break missingId;
      }

      id = R.id.tvChannelName;
      TextView tvChannelName = ViewBindings.findChildViewById(rootView, id);
      if (tvChannelName == null) {
        break missingId;
      }

      id = R.id.tvComment;
      TextView tvComment = ViewBindings.findChildViewById(rootView, id);
      if (tvComment == null) {
        break missingId;
      }

      id = R.id.tvLikes;
      TextView tvLikes = ViewBindings.findChildViewById(rootView, id);
      if (tvLikes == null) {
        break missingId;
      }

      id = R.id.tvShare;
      TextView tvShare = ViewBindings.findChildViewById(rootView, id);
      if (tvShare == null) {
        break missingId;
      }

      id = R.id.tvVideoDatePosted;
      TextView tvVideoDatePosted = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoDatePosted == null) {
        break missingId;
      }

      id = R.id.tvVideoViews;
      TextView tvVideoViews = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoViews == null) {
        break missingId;
      }

      return new ItemVideoBinding((ConstraintLayout) rootView, ivVideoThumbnail, tvChannelName,
          tvComment, tvLikes, tvShare, tvVideoDatePosted, tvVideoViews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
